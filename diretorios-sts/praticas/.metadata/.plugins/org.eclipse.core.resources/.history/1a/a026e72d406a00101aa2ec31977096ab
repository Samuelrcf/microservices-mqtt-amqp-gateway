package mqttclient.application;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URI;
import java.net.URL;
import java.util.Scanner;

import org.eclipse.paho.client.mqttv3.MqttClient;
import org.eclipse.paho.client.mqttv3.MqttConnectOptions;
import org.json.JSONObject;

public class ClienteMQTT {

    public static void main(String[] args) {
        try {
            // Passo 1: Descobrir endereço do MQTT Service via API Gateway
        	URI uri = new URI("http://localhost:8080/gateway/mqtt");
        	URL url = uri.toURL();
            HttpURLConnection conexao = (HttpURLConnection) url.openConnection();
            conexao.setRequestMethod("GET");

            if (conexao.getResponseCode() != 200) {
                System.out.println("Não foi possível localizar o serviço MQTT.");
                return;
            }

            InputStream input = conexao.getInputStream();
            BufferedReader reader = new BufferedReader(new InputStreamReader(input));
            StringBuilder resposta = new StringBuilder();
            String linha;

            while ((linha = reader.readLine()) != null) {
                resposta.append(linha);
            }

            JSONObject json = new JSONObject(resposta.toString());
            String host = json.getString("host");
            String port = json.getString("port");

            String brokerUrl = "tcp://" + host + ":" + port;
            System.out.println("Broker MQTT localizado em: " + brokerUrl);

            // Passo 2: Escolher o tópico
            Scanner scanner = new Scanner(System.in);
            System.out.println("Escolha o tópico para receber dados:");
            System.out.println("1 - Todos");
            System.out.println("2 - Norte");
            System.out.println("3 - Sul");
            System.out.println("4 - Leste");
            System.out.println("5 - Oeste");
            System.out.print("Opção: ");
            int opcao = scanner.nextInt();
            scanner.close();

            String topic;
            switch (opcao) {
                case 2: topic = "dados_processados/norte"; break;
                case 3: topic = "dados_processados/sul"; break;
                case 4: topic = "dados_processados/leste"; break;
                case 5: topic = "dados_processados/oeste"; break;
                default: topic = "dados_processados/todos"; break;
            }

            // Passo 3: Conectar ao broker MQTT
            MqttClient client = new MqttClient(brokerUrl, MqttClient.generateClientId());
            MqttConnectOptions options = new MqttConnectOptions();
            options.setAutomaticReconnect(true);
            options.setCleanSession(true); // pode ser false se quiser manter sessões persistentes

            client.connect(options);
            System.out.println("Consumidor MQTT conectado ao broker.");
            System.out.println("Inscrito no tópico: " + topic);

            // Passo 4: Assinar o tópico escolhido
            client.subscribe(topic, (t, msg) -> {
                System.out.println("Mensagem recebida [MQTT]: " + new String(msg.getPayload()));
            });

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

