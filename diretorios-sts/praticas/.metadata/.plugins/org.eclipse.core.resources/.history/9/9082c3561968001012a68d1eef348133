package com.ufersa.apigateway.ui;

import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Service;

@Service
public class DashboardService {

    private final Map<String, Double> somaTemperatura = new HashMap<>();
    private final Map<String, Double> somaUmidade = new HashMap<>();
    private final Map<String, Double> somaPressao = new HashMap<>();
    private final Map<String, Double> somaRadiacao = new HashMap<>();

    private final Map<String, Integer> totalTemperatura = new HashMap<>();
    private final Map<String, Integer> totalUmidade = new HashMap<>();
    private final Map<String, Integer> totalPressao = new HashMap<>();
    private final Map<String, Integer> totalRadiacao = new HashMap<>();

    private int totalDados = 0;

    public void processarDado(String dado) {
        try {
            String[] partes = dado.split("\\] \\[");
            String regiao = partes[0].replace("[", "").trim();
            String[] valores = partes[1].replace("]", "").split("\\|");

            double temperatura = Double.parseDouble(valores[0].trim().replace(",", "."));
            double umidade = Double.parseDouble(valores[1].trim().replace(",", "."));
            double pressao = Double.parseDouble(valores[2].trim().replace(",", "."));
            double radiacao = Double.parseDouble(valores[3].trim().replace(",", "."));

            totalDados += 4;

            acumular(somaTemperatura, totalTemperatura, regiao, temperatura);
            acumular(somaUmidade, totalUmidade, regiao, umidade);
            acumular(somaPressao, totalPressao, regiao, pressao);
            acumular(somaRadiacao, totalRadiacao, regiao, radiacao);

        } catch (Exception e) {
            System.out.println("Erro ao processar dado: " + e);
        }
    }

    private void acumular(Map<String, Double> soma, Map<String, Integer> total, String regiao, double valor) {
        soma.put(regiao, soma.getOrDefault(regiao, 0.0) + valor);
        total.put(regiao, total.getOrDefault(regiao, 0) + 1);
    }

    public DashboardResponse gerarResumo() {
        return new DashboardResponse(
            totalDados,
            totalTemperatura,
            totalUmidade,
            totalPressao,
            totalRadiacao,
            calcularMedias(somaTemperatura, totalTemperatura),
            calcularMedias(somaUmidade, totalUmidade),
            calcularMedias(somaPressao, totalPressao),
            calcularMedias(somaRadiacao, totalRadiacao)
        );
    }

    private Map<String, Double> calcularMedias(Map<String, Double> soma, Map<String, Integer> contagem) {
        Map<String, Double> medias = new HashMap<>();
        for (String regiao : soma.keySet()) {
            int count = contagem.getOrDefault(regiao, 0);
            if (count > 0) {
                medias.put(regiao, soma.get(regiao) / count);
            }
        }
        return medias;
    }
}

